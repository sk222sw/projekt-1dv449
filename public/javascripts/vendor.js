/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(374);


/***/ },

/***/ 374:
/***/ function(module, exports, __webpack_require__) {

	eval("var require;\"use strict\";\n\n(function () {\n  var requirejs, require, define, __inflate;(function (e) {\n    function a(e, t) {\n      var n = t && t.split(\"/\"),\n          i = r.map,\n          s = i && i[\"*\"] || {},\n          o,\n          u,\n          a,\n          f,\n          l,\n          c,\n          h;if (e && e.charAt(0) === \".\" && t) {\n        n = n.slice(0, n.length - 1), e = n.concat(e.split(\"/\"));for (l = 0; h = e[l]; l++) {\n          if (h === \".\") e.splice(l, 1), l -= 1;else if (h === \"..\") {\n            if (l === 1 && (e[2] === \"..\" || e[0] === \"..\")) return !0;l > 0 && (e.splice(l - 1, 2), l -= 2);\n          }\n        }e = e.join(\"/\");\n      }if ((n || s) && i) {\n        o = e.split(\"/\");for (l = o.length; l > 0; l -= 1) {\n          u = o.slice(0, l).join(\"/\");if (n) for (c = n.length; c > 0; c -= 1) {\n            a = i[n.slice(0, c).join(\"/\")];if (a) {\n              a = a[u];if (a) {\n                f = a;break;\n              }\n            }\n          }f = f || s[u];if (f) {\n            o.splice(0, l, f), e = o.join(\"/\");break;\n          }\n        }\n      }return e;\n    }function f(t, n) {\n      return function () {\n        return _u.apply(e, s.call(arguments, 0).concat([t, n]));\n      };\n    }function l(e) {\n      return function (t) {\n        return a(t, e);\n      };\n    }function c(e) {\n      return function (n) {\n        t[e] = n;\n      };\n    }function h(r) {\n      if (n.hasOwnProperty(r)) {\n        var s = n[r];delete n[r], i[r] = !0, o.apply(e, s);\n      }if (!t.hasOwnProperty(r)) throw new Error(\"No \" + r);return t[r];\n    }function p(e, t) {\n      var n,\n          r,\n          i = e.indexOf(\"!\");return i !== -1 ? (n = a(e.slice(0, i), t), e = e.slice(i + 1), r = h(n), r && r.normalize ? e = r.normalize(e, l(t)) : e = a(e, t)) : e = a(e, t), { f: n ? n + \"!\" + e : e, n: e, p: r };\n    }function d(e) {\n      return function () {\n        return r && r.config && r.config[e] || {};\n      };\n    }var t = {},\n        n = {},\n        r = {},\n        i = {},\n        s = [].slice,\n        o,\n        _u;o = function o(r, s, _o, u) {\n      var a = [],\n          l,\n          v,\n          m,\n          g,\n          y,\n          b;u = u || r, typeof _o == \"string\" && (_o = __inflate(r, _o));if (typeof _o == \"function\") {\n        s = !s.length && _o.length ? [\"require\", \"exports\", \"module\"] : s;for (b = 0; b < s.length; b++) {\n          y = p(s[b], u), m = y.f;if (m === \"require\") a[b] = f(r);else if (m === \"exports\") a[b] = t[r] = {}, l = !0;else if (m === \"module\") v = a[b] = { id: r, uri: \"\", exports: t[r], config: d(r) };else if (t.hasOwnProperty(m) || n.hasOwnProperty(m)) a[b] = h(m);else if (y.p) y.p.load(y.n, f(u, !0), c(m), {}), a[b] = t[m];else if (!i[m]) throw new Error(r + \" missing \" + m);\n        }g = _o.apply(t[r], a);if (r) if (v && v.exports !== e && v.exports !== t[r]) t[r] = v.exports;else if (g !== e || !l) t[r] = g;\n      } else r && (t[r] = _o);\n    }, requirejs = require = _u = function u(t, n, i, s) {\n      return typeof t == \"string\" ? h(p(t, n).f) : (t.splice || (r = t, n.splice ? (t = n, n = i, i = null) : t = e), n = n || function () {}, s ? o(e, t, n, i) : setTimeout(function () {\n        o(e, t, n, i);\n      }, 15), _u);\n    }, _u.config = function (e) {\n      return r = e, _u;\n    }, define = function define(e, t, r) {\n      t.splice || (r = t, t = []), n[e] = [e, t, r];\n    }, define.amd = { jQuery: !0 };\n  })(), __inflate = function __inflate(name, src) {\n    var r;return eval([\"r = function(a,b,c){\", \"\\n};\\n//@ sourceURL=\" + name + \"\\n\"].join(src)), r;\n  }, define(\"lib/api/events\", [\"require\", \"exports\", \"module\"], function (e, t, n) {\n    t.api = { LOAD_PROGRESS: \"loadProgress\", PLAY_PROGRESS: \"playProgress\", PLAY: \"play\", PAUSE: \"pause\", FINISH: \"finish\", SEEK: \"seek\", READY: \"ready\", OPEN_SHARE_PANEL: \"sharePanelOpened\", CLICK_DOWNLOAD: \"downloadClicked\", CLICK_BUY: \"buyClicked\", ERROR: \"error\" }, t.bridge = { REMOVE_LISTENER: \"removeEventListener\", ADD_LISTENER: \"addEventListener\" };\n  }), define(\"lib/api/getters\", [\"require\", \"exports\", \"module\"], function (e, t, n) {\n    n.exports = { GET_VOLUME: \"getVolume\", GET_DURATION: \"getDuration\", GET_POSITION: \"getPosition\", GET_SOUNDS: \"getSounds\", GET_CURRENT_SOUND: \"getCurrentSound\", GET_CURRENT_SOUND_INDEX: \"getCurrentSoundIndex\", IS_PAUSED: \"isPaused\" };\n  }), define(\"lib/api/setters\", [\"require\", \"exports\", \"module\"], function (e, t, n) {\n    n.exports = { PLAY: \"play\", PAUSE: \"pause\", TOGGLE: \"toggle\", SEEK_TO: \"seekTo\", SET_VOLUME: \"setVolume\", NEXT: \"next\", PREV: \"prev\", SKIP: \"skip\" };\n  }), define(\"lib/api/api\", [\"require\", \"exports\", \"module\", \"lib/api/events\", \"lib/api/getters\", \"lib/api/setters\"], function (e, t, n) {\n    function m(e) {\n      return !!(e === \"\" || e && e.charCodeAt && e.substr);\n    }function g(e) {\n      return !!(e && e.constructor && e.call && e.apply);\n    }function y(e) {\n      return !!e && e.nodeType === 1 && e.nodeName.toUpperCase() === \"IFRAME\";\n    }function b(e) {\n      var t = !1,\n          n;for (n in i) {\n        if (i.hasOwnProperty(n) && i[n] === e) {\n          t = !0;break;\n        }\n      }return t;\n    }function w(e) {\n      var t, n, r;for (t = 0, n = f.length; t < n; t++) {\n        r = e(f[t]);if (r === !1) break;\n      }\n    }function E(e) {\n      var t = \"\",\n          n,\n          r,\n          i;e.substr(0, 2) === \"//\" && (e = window.location.protocol + e), i = e.split(\"/\");for (n = 0, r = i.length; n < r; n++) {\n        if (!(n < 3)) break;t += i[n], n < 2 && (t += \"/\");\n      }return t;\n    }function S(e) {\n      return e.contentWindow ? e.contentWindow : e.contentDocument && \"parentWindow\" in e.contentDocument ? e.contentDocument.parentWindow : null;\n    }function x(e) {\n      var t = [],\n          n;for (n in e) {\n        e.hasOwnProperty(n) && t.push(e[n]);\n      }return t;\n    }function T(e, t, n) {\n      n.callbacks[e] = n.callbacks[e] || [], n.callbacks[e].push(t);\n    }function N(e, t) {\n      var n = !0,\n          r;return t.callbacks[e] = [], w(function (t) {\n        r = t.callbacks[e] || [];if (r.length) return n = !1, !1;\n      }), n;\n    }function C(e, t, n) {\n      var r = S(n),\n          i,\n          s;if (!r.postMessage) return !1;i = n.getAttribute(\"src\").split(\"?\")[0], s = JSON.stringify({ method: e, value: t }), i.substr(0, 2) === \"//\" && (i = window.location.protocol + i), i = i.replace(/http:\\/\\/(w|wt).soundcloud.com/, \"https://$1.soundcloud.com\"), r.postMessage(s, i);\n    }function k(e) {\n      var t;return w(function (n) {\n        if (n.instance === e) return t = n, !1;\n      }), t;\n    }function L(e) {\n      var t;return w(function (n) {\n        if (S(n.element) === e) return t = n, !1;\n      }), t;\n    }function A(e, t) {\n      return function (n) {\n        var r = g(n),\n            i = k(this),\n            s = !r && t ? n : null,\n            o = r && !t ? n : null;return o && T(e, o, i), C(e, s, i.element), this;\n      };\n    }function O(e, t, n) {\n      var r, i, s;for (r = 0, i = t.length; r < i; r++) {\n        s = t[r], e[s] = A(s, n);\n      }\n    }function M(e, t, n) {\n      return e + \"?url=\" + t + \"&\" + _(n);\n    }function _(e) {\n      var t,\n          n,\n          r = [];for (t in e) {\n        e.hasOwnProperty(t) && (n = e[t], r.push(t + \"=\" + (t === \"start_track\" ? parseInt(n, 10) : n ? \"true\" : \"false\")));\n      }return r.join(\"&\");\n    }function D(e, t, n) {\n      var r = e.callbacks[t] || [],\n          i,\n          s;for (i = 0, s = r.length; i < s; i++) {\n        r[i].apply(e.instance, n);\n      }if (b(t) || t === o.READY) e.callbacks[t] = [];\n    }function P(e) {\n      var t, n, r, i, s;try {\n        n = JSON.parse(e.data);\n      } catch (u) {\n        return !1;\n      }t = L(e.source), r = n.method, i = n.value;if (t && H(e.origin) !== H(t.domain)) return !1;if (!t) return r === o.READY && a.push(e.source), !1;r === o.READY && (t.isReady = !0, D(t, l), N(l, t)), r === o.PLAY && !t.playEventFired && (t.playEventFired = !0), r === o.PLAY_PROGRESS && !t.playEventFired && (t.playEventFired = !0, D(t, o.PLAY, [i])), s = [], i !== undefined && s.push(i), D(t, r, s);\n    }function H(e) {\n      return e.replace(h, \"\");\n    }var r = e(\"lib/api/events\"),\n        i = e(\"lib/api/getters\"),\n        s = e(\"lib/api/setters\"),\n        o = r.api,\n        u = r.bridge,\n        a = [],\n        f = [],\n        l = \"__LATE_BINDING__\",\n        c = \"http://wt.soundcloud.dev:9200/\",\n        h = /^http(?:s?)/,\n        p,\n        d,\n        v;window.addEventListener ? window.addEventListener(\"message\", P, !1) : window.attachEvent(\"onmessage\", P), n.exports = v = function v(e, t, n) {\n      m(e) && (e = document.getElementById(e));if (!y(e)) throw new Error(\"SC.Widget function should be given either iframe element or a string specifying id attribute of iframe element.\");t && (n = n || {}, e.src = M(c, t, n));var r = L(S(e)),\n          i,\n          s;return r && r.instance ? r.instance : (i = a.indexOf(S(e)) > -1, s = new p(e), f.push(new d(s, e, i)), s);\n    }, v.Events = o, window.SC = window.SC || {}, window.SC.Widget = v, d = function d(e, t, n) {\n      this.instance = e, this.element = t, this.domain = E(t.getAttribute(\"src\")), this.isReady = !!n, this.callbacks = {};\n    }, p = function p() {}, p.prototype = { constructor: p, load: function load(e, t) {\n        if (!e) return;t = t || {};var n = this,\n            r = k(this),\n            i = r.element,\n            s = i.src,\n            a = s.substr(0, s.indexOf(\"?\"));r.isReady = !1, r.playEventFired = !1, i.onload = function () {\n          n.bind(o.READY, function () {\n            var e,\n                n = r.callbacks;for (e in n) {\n              n.hasOwnProperty(e) && e !== o.READY && C(u.ADD_LISTENER, e, r.element);\n            }t.callback && t.callback();\n          });\n        }, i.src = M(a, e, t);\n      }, bind: function bind(e, t) {\n        var n = this,\n            r = k(this);return r && r.element && (e === o.READY && r.isReady ? setTimeout(t, 1) : r.isReady ? (T(e, t, r), C(u.ADD_LISTENER, e, r.element)) : T(l, function () {\n          n.bind(e, t);\n        }, r)), this;\n      }, unbind: function unbind(e) {\n        var t = k(this),\n            n;t && t.element && (n = N(e, t), e !== o.READY && n && C(u.REMOVE_LISTENER, e, t.element));\n      } }, O(p.prototype, x(i)), O(p.prototype, x(s), !0);\n  }), window.SC = window.SC || {}, window.SC.Widget = require(\"lib/api/api\");\n})();//@ sourceMappingURL=data:application/json;base64,");

/***/ }

/******/ });